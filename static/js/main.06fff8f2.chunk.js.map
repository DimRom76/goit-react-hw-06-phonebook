{"version":3,"sources":["redux/contacts/contacts-types.js","redux/contacts/contacts-actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactElement/ContactElement.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactElement/ContactElement.module.css"],"names":["types","ADD_CONTACTS","DELETE_CONTACTS","CHANGE_FILTER","actions","addContacts","values","type","payload","id","uuidv4","name","number","deleteContacts","changeFilter","filter","connect","dispatch","onSubmit","value","contactsAction","schema","Yup","shape","min","max","required","length","initialValues","validationSchema","setSubmitting","resetForm","isSubmitting","errors","touched","className","s","form","form_field","htmlFor","form_label","placeholder","error_message","pattern","disabled","ContactElement","onDeleteContact","element","onClick","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","el","indexOf","contacts","map","state","handleInput","e","target","onInput","App","initialContacts","contactsReducer","combineReducers","contact","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.06fff8f2.chunk.js","sourcesContent":["const ADD_CONTACTS = 'contacts/Add';\nconst DELETE_CONTACTS = 'contacts/Delete';\nconst CHANGE_FILTER = 'contacts/ChangeFilter';\n\nconst types = { ADD_CONTACTS, DELETE_CONTACTS, CHANGE_FILTER };\nexport default types;\n","import types from './contacts-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContacts = values => ({\n  type: types.ADD_CONTACTS,\n  payload: {\n    id: uuidv4(),\n    name: values.name,\n    number: values.number,\n  },\n});\n\nconst deleteContacts = id => ({\n  type: types.DELETE_CONTACTS,\n  payload: {\n    id,\n  },\n});\n\nconst changeFilter = filter => ({\n  type: types.CHANGE_FILTER,\n  payload: filter,\n});\n\nconst actions = { addContacts, deleteContacts, changeFilter };\nexport default actions;\n","import { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nfunction ContactForm({ onSubmit }) {\n  let schema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(25, 'Too Long!')\n      .required('Requerid'),\n    number: Yup.string().length(9, 'Wrong length!').required('Requerid'),\n  });\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={schema}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        onSubmit(values);\n\n        //форма в режиме отправляется, кнопка неактивная пока не отменим\n        //нужно если бросам запрос на сервер например\n        setSubmitting(false);\n\n        //очищаем форму к начальным значениям\n        resetForm();\n      }}\n    >\n      {({ isSubmitting, errors, touched }) => (\n        <Form className={s.form}>\n          <div className={s.form_field}>\n            <label\n              htmlFor=\"name\n                  \"\n              className={s.form_label}\n            >\n              Name\n            </label>\n            <Field\n              className=\"form_input\"\n              name=\"name\"\n              placeholder=\"Input name...\"\n            />\n            {errors.name && touched.name ? (\n              <div className={s.error_message}>{errors.name}</div>\n            ) : null}\n          </div>\n\n          <div className={s.form_field}>\n            <label htmlFor=\"number\" className={s.form_label}>\n              Number\n            </label>\n            <Field\n              className=\"form_input\"\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n              placeholder=\"555-55-55\"\n            />\n            {errors.number && touched.number ? (\n              <div className={s.error_message}>{errors.number}</div>\n            ) : null}\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className={s.form_field}\n          >\n            Add contact\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(contactsAction.addContacts(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport s from './ContactElement.module.css';\n\nexport default function ContactElement({ id, name, number, onDeleteContact }) {\n  return (\n    <li>\n      <p className={s.element}>\n        {name}: {number}\n      </p>\n      <button className=\"close__button\" onClick={() => onDeleteContact(id)}>\n        X\n      </button>\n    </li>\n  );\n}\n\nContactElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ContactElement from './ContactElement/ContactElement';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className=\"older\">\n      {contacts.map(el => {\n        return (\n          <ContactElement\n            key={el.id}\n            id={el.id}\n            name={el.name}\n            number={el.number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  filter: PropTypes.string,\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(el => {\n    const foundPos = el.name.toLowerCase().indexOf(normalizedFilter);\n    return foundPos === -1 ? false : true;\n  });\n};\n\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => ({\n  contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(contactsAction.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ value, handleInput }) {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <input\n        className=\"form_input\"\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onInput={handleInput}\n      ></input>\n    </>\n  );\n}\n\nFilter.propTypes = {\n  handleInput: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleInput: e => dispatch(contactsAction.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import './App.css';\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport types from './contacts-types';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction contactReducer(state = initialContacts, { type, payload }) {\n  switch (type) {\n    case types.ADD_CONTACTS:\n      return [...state, payload];\n\n    case types.DELETE_CONTACTS:\n      return state.filter(contact => contact.id !== payload.id);\n\n    default:\n      return state;\n  }\n}\nfunction filterReducer(state = '', { type, payload }) {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n    default:\n      return state;\n  }\n}\n\nconst contactsReducer = combineReducers({\n  contacts: contactReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Wvkm\",\"form_field\":\"ContactForm_form_field__1iEiP\",\"form_label\":\"ContactForm_form_label__1PqV0\",\"error_message\":\"ContactForm_error_message__1X1qI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"ContactElement_element__1fsXL\",\"close__button\":\"ContactElement_close__button__3ZKKe\"};"],"sourceRoot":""}